# A generic alembic configuration file.
# https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names
file_template = %%(rev)s_%%(slug)s

# timezone for dates in migrations
timezone =

# max length of migration file name
# revision_environment = false

# set to true to allow .pyc and .pyo files
# in the versions/ directory
# sourceless = false

# The SQLAlchemy URL to connect to the database.
# See https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls
# This is read from the environment variable DATABASE_URL
sqlalchemy.url = %(DATABASE_URL)s

# Additional options to pass to the create_engine() call.
# See https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine
[post_write_hooks]
# post_write_hooks specifies scripts to run after a migration is generated
# see https://alembic.sqlalchemy.org/en/latest/hooks.html
# an example using black and isort
# hooks = black, isort
# black.type = exec
# black.entrypoint = black
# black.options = alembic/versions
# isort.type = exec
# isort.entrypoint = isort
# isort.options = alembic/versions

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
